
buildscript{
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies{
    }
}
apply plugin: 'java'

sourceCompatibility = 1.8
version = '1.0'

configurations {
    all*.exclude group: 'log4j'
}



/** 此闭包内的声明子类皆可使用 */
allprojects {
    group = 'com.codegen.jet'
    version = '1.0.1'

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply plugin: 'maven-publish'


    repositories {
        mavenCentral()
        mavenLocal()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }

    }


}

subprojects{
    dependencies {
        compile 'mysql:mysql-connector-java:5.1.30'

        compile 'org.freemarker:freemarker:2.3.20'

        compile group: 'org.apache.velocity', name: 'velocity', version: '1.7'
//        compile group: 'org.apache.velocity', name: 'velocity-tool', version: '2.0'

        compile 'org.slf4j:slf4j-api:1.7.21'
        compile 'ch.qos.logback:logback-classic:1.1.7'
        compile 'ch.qos.logback:logback-core:1.1.7'

//        compile 'org.slf4j:log4j-over-slf4j:1.7.7'
        compile 'org.slf4j:jcl-over-slf4j:1.7.7'
        compile 'org.slf4j:jul-to-slf4j:1.7.7'

        testCompile 'junit:junit:4.12'
    }

    task "createJavaProject" << {
        sourceSets*.java.srcDirs*.each { it.mkdirs() }
        sourceSets*.resources.srcDirs*.each { it.mkdirs() }
    }

}

configure(subprojects.findAll{it.name.contains('war')}){
    apply plugin: 'war'

    task createWebProject(dependsOn: 'createJavaProject') << {
        def webAppDir = file("$webAppDirName")
        webAppDir.mkdirs()
    }

}

task dist(type:Zip){
    from jar.outputs.files
    //from war.outputs.files
}
