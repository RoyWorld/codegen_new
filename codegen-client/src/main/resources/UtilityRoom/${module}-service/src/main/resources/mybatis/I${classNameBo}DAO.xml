<#include "/macro.include"/>
<#assign className = table.classNameBo>
<#assign classNameFirstLower = table.classNameFirstLower>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<#macro mapperEl value>${r"#{"}${value}}</#macro>
<#macro conditionMapperEl value>${r"#{condition."}${value}}</#macro>
<#macro jspEl value>${r"${"}${value}}</#macro>
<#macro namespace>${basepackage}.${persistence}</#macro>

<mapper namespace="${basepackage}.dao.I${className}DAO">

<#assign isSKey = false>
<#if table.getPkColumn()?? && table.getPkColumn().sqlType==12>
<#assign isSKey = true>
</#if>

    <sql id="Base_Column_List">
        <#list table.columns as _column>
        ${_column.sqlName} as ${_column.columnNameFirstLower} <#if _column_has_next>,</#if>
        </#list>
    </sql>

	<!-- 列表对应的查询条件组合  -->
  <sql id="queryOptions">
       <where>
		<#list table.columns as column>
           <if test="condition.${column.sqlName}!=null">
               <if test="condition.${column.sqlName}__!=null">
                   AND ${table.sqlName}.${'$'}{condition.${column.sqlName}.field} ${'$'}{condition.${column.sqlName}.op} ${'#'}{condition.${column.sqlName}.data}
               </if>
               <if test="condition.${column.sqlName}__==null"> AND ${table.sqlName}.${column.sqlName} = <@mapperEl 'condition.' + column.columnNameFirstLower/></if>
           </if>
		</#list>
        </where>
  </sql>

   <sql id="queryOptions_like">
       <where>
		<#list table.columns as column>
		<if test="condition.${column.columnNameFirstLower}!=null">
                AND ${column.sqlName} like CONCAT('%', <@mapperEl 'condition.' + column.columnNameFirstLower/> , '%')
            </if>
		</#list>
        </where>
  </sql>


  <sql id="queryOptions_opt">
		<trim prefix="WHERE" prefixOverrides="AND | OR">
            <#list table.columns as column>
            <if test="condition.${column.columnNameFirstLower}!=null">
                AND ${column.sqlName} = <@conditionMapperEl column.columnNameFirstLower/>
            </if>
            </#list>
        </trim>
  </sql>

  <!-- 列表查询对应的排序选项  -->
  <sql id="orderControl">
       <if test="order!=null">
		   	 <trim prefix="ORDER BY" suffixOverrides=",">
				    <#list table.columns as column>
						<if test="order.${column.columnNameFirstLower}!=null">
						${table.sqlName}.${column.sqlName} ${'$'}{order.${column.columnNameFirstLower}},
						</if>
					</#list>
			</trim>
		  
	   </if>
  </sql>

    <insert id="insert" parameterType="${className}">
        <selectKey keyProperty="id" resultType="Integer" order="AFTER">
            select last_insert_id()
        </selectKey>
        <#-- !--<#if isSKey>-->
            <#--  !--<selectKey keyProperty="id" resultType="String" order="BEFORE">-->
                <#-- !--select uuid()-->
            <#-- !--</selectKey>-->
        <#-- !--</#if>-->
        INSERT INTO ${table.sqlName} (
        <#list table.columns as column>
				${column.sqlName}<#if column_has_next>,</#if>
        </#list>
        ) VALUES (
        <#list table.columns as column>
        <@mapperEl column.columnNameFirstLower/><#if column_has_next>,</#if>
        </#list>
        )
    </insert>

    <!-- 更新 -->
    <update id="update" parameterType="${className}">
        UPDATE ${table.sqlName}
		<set>
         
            <#list table.notPkColumns as column>
            <#if "id"!=column || isSKey>
				${column.sqlName} = <@mapperEl column.columnNameFirstLower/><#if column_has_next>,</#if>
			</#if>
            </#list>
         
		</set>
		
		<trim prefix="WHERE" suffixOverrides="and">
		<#list table.columns as column>
			<#if "id" == column || "paperId" == column.columnNameFirstLower>
			${column.sqlName} = <@mapperEl column.columnNameFirstLower/>
			</#if>
		</#list>
		</trim>
    </update>

    <update id="updateByCondition">
        UPDATE ${table.sqlName}
        <trim prefix="SET" suffixOverrides=",">
            <#list table.notPkColumns as column>
            <if test="update.${column.columnNameFirstLower}!=null">
                ${column.sqlName} = <@mapperEl 'update.'+column.columnNameFirstLower />,
            </if>
        </#list>
        </trim>
        <include refid="queryOptions"/>
    </update>


    <insert id="insertByCondition" >
        INSERT INTO ${table.sqlName} (
            <trim suffix="" suffixOverrides=",">
                <#list table.columns as column>
                <if test="insert.${column.columnNameFirstLower}!=null">
                    ${column.sqlName}<#if column_has_next>,</#if>
                </if>
                </#list>
            </trim>
        ) VALUES (
            <trim suffix="" suffixOverrides=",">
                <#list table.columns as column>
                    <if test="insert.${column.columnNameFirstLower}!=null">
                        <@mapperEl 'insert.'+column.columnNameFirstLower /><#if column_has_next>,</#if>
                    </if>
                </#list>
            </trim>
        )
    </insert>


    <delete id="deleteByCondition" parameterType="java.util.Map">
        DELETE FROM ${table.sqlName}
        <include refid="queryOptions"/>
    </delete>

    <select id="queryOne" parameterType="java.util.Map" resultType="${className}">
        SELECT
        <include refid="Base_Column_List" />
        FROM ${table.sqlName}
		<include refid="queryOptions"/>
		<include refid="orderControl"/>
        LIMIT 0,1
    </select>

    <select id="queryList" resultType="${className}">
        SELECT
        <include refid="Base_Column_List" />
        FROM ${table.sqlName}
        <include refid="queryOptions"/>
		<include refid="orderControl"/>
    </select>


    <select id="queryPage" resultType="${className}">
        SELECT
        <include refid="Base_Column_List" />
        FROM ${table.sqlName}
       <include refid="queryOptions" />

        <include refid="orderControl"/>

        <if test="offset!=null">
            limit <@jspEl 'offset'/>, <@jspEl 'rows'/>
        </if>
    </select>

    <select id="likePage" parameterType="java.util.Map" resultType="${className}">
        SELECT
       
            <include refid="Base_Column_List" />
        FROM ${table.sqlName}
        <include refid="queryOptions_like" />
        <include refid="orderControl" />
		<if test="offset!=null">
            limit <@jspEl 'offset'/>, <@jspEl 'rows'/>
        </if>
    </select>


    <select id="count" resultType="java.lang.Integer">
        SELECT count(${table.idColumn.sqlName}) FROM ${table.sqlName}
       <include refid="queryOptions_opt" />
    </select>


</mapper>

