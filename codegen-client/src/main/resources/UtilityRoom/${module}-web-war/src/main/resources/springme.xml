<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
           http://mybatis.org/schema/mybatis-spring      http://mybatis.org/schema/mybatis-spring.xsd
           http://www.springframework.org/schema/aop     http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
           http://www.springframework.org/schema/tx      http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
       ">

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="order" value="1"/>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
    </bean>

    <!-- 注入spring工具类 -->
    <bean class="${basepackage}.util.SpringUtil" />

    <aop:aspectj-autoproxy/>

    <!--默认的redis配置，启动时会建立连接-->
    <!--<import resource="classpath*:spring-redis.xml"/>-->

    <!-- 消息队列插件 -->
    <!--<import resource="classpath*:spring-activemq.xml"/>-->


    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
        <qualifier value="platform"/>
    </bean>

    <!-- 使用annotation定义事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="false"/>

    <!-- MyBatis配置 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 自动扫描domain目录, 省掉Configuration.xml里的手工配置 -->
        <property name="typeAliasesPackage" value="${basepackage}.domain,${basepackage}.common"/>
        <!-- 显式指定Mapper文件位置 -->
        <property name="mapperLocations" value="classpath*:/mybatis/*.xml"/>
        <property name="configLocation" value="classpath:mybatis-config.xml" />
    </bean>
    <!-- 扫描basePackage下接口 自动生成代理实现类 -->
    <mybatis:scan base-package="${basepackage}.dao" factory-ref="sqlSessionFactory"/>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${r"jdbc:mysql://localhost:3306/${jdbc.databasename}?useUnicode=true&amp;characterEncoding=UTF-8&amp;allowMultiQueries=true"}"/>
        <property name="username" value="root"/>
        <property name="password" value="123456"/>

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="1"/>
        <property name="minIdle" value="1"/>
        <property name="maxActive" value="200"/>

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="false"/>

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="false"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="-1"/>

        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat"/>
    </bean>

    <!--<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">-->
        <!--&lt;!&ndash; 基本属性 url、user、password &ndash;&gt;-->
        <!--<property name="url" value="${r"${jdbc_url}"}&amp;allowMultiQueries=true"/>-->
        <!--<property name="username" value="${r"${jdbc_user}"}"/>-->
        <!--<property name="password" value="${r"${jdbc_password}"}"/>-->

        <!--&lt;!&ndash; 配置初始化大小、最小、最大 &ndash;&gt;-->
        <!--<property name="initialSize" value="${r"${druid.pool.initialSize}"}"/>-->
        <!--<property name="minIdle" value="${r"${druid.pool.minIdle}"}"/>-->
        <!--<property name="maxActive" value="${r"${druid.pool.axActive}"}"/>-->

        <!--&lt;!&ndash; 配置获取连接等待超时的时间 &ndash;&gt;-->
        <!--<property name="maxWait" value="60000"/>-->

        <!--&lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;-->
        <!--<property name="timeBetweenEvictionRunsMillis" value="60000"/>-->

        <!--&lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;-->
        <!--<property name="minEvictableIdleTimeMillis" value="300000"/>-->

        <!--<property name="validationQuery" value="SELECT 'x'"/>-->
        <!--<property name="testWhileIdle" value="true"/>-->
        <!--<property name="testOnBorrow" value="true"/>-->
        <!--<property name="testOnReturn" value="false"/>-->

        <!--&lt;!&ndash; 打开PSCache，并且指定每个连接上PSCache的大小 &ndash;&gt;-->
        <!--<property name="poolPreparedStatements" value="false"/>-->
        <!--<property name="maxPoolPreparedStatementPerConnectionSize" value="-1"/>-->

        <!--&lt;!&ndash; 配置监控统计拦截的filters &ndash;&gt;-->
        <!--<property name="filters" value="stat"/>-->
    <!--</bean>-->

    <!-- 数据库选择器 -->
    <!--<bean id="dbSelector" class="cn.thinkjoy.common.mybatis.core.mybatis.db.DBSelector">-->
        <!--<property name="dbType" value="mysql" />-->
    <!--</bean>-->

    <!--<bean id="shardingDataSource" class="com.dangdang.ddframe.rdb.sharding.api.ShardingDataSource">-->
        <!--<constructor-arg ref="shardingRule"/>-->
    <!--</bean>-->


</beans>
